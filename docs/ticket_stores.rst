=============
Ticket Stores
=============

Ticket stores in txcas are plugins used to keep track of the various tickets
used by the CAS protocol.  Ticket stores generate tickets on request.  A ticket
store must track how long a ticket is valid and expire it appropriately.
A ticket store is also responsible for validating tickets, and making Single
Log Out (:term:`SLO`) callbacks to services.

A ticket_store is enabled by setting the :option:`ticket_store` option of the 
`PLUGINS` section in the main configuration file.
The ticket_store options included in txcas are:

* :option:`memory_ticket_store`: This ticket store manages tickets entirely in
  the memory allocated to the txcas process.  It has the advantage of being quite
  fast when it comes to ticket creation, modification, or expiration.  There is
  no network latency.  However, this ticket store is limited in that it is not
  persistant.  If the process is stopped and restarted, all tickets that were 
  previously in the ticket store are lost.  Also, for situations where CAS 
  servers span multiple nodes, this type of ticket store cannot be shared 
  across process or server boundries.

* :option:`couchdb_ticket_store`: This ticket store manages tickets in an 
  external `CouchDB`_ database.  This ticket store may have network latency 
  issues associated with it that are not present in an in-memory ticket store.
  However, tickets stored "in the couch" are persistant.  Because the ticket
  storage is external, tickets can be shared across multiple nodes.  Also,
  CouchDB's master-master replication capabilites make this storage worthy
  of consideration for high availability scenarios.  Projects like
  `CouchDB Lounge`_ or `Big Couch`_  are certainly worth a look if scalability
  is a concern.

  Because CouchDB is written to be operated completely with a RESTful API, no
  special database drivers are required.  It is also a good fit with the 
  `Twisted asynchronous I/O model`_.

  The CouchDB options can be configured by appending a colon to this option and
  providing colon-separated key=value pairs *or* by configuring options in the
  `CouchDB` section of the main config file (the latter method is preferred).
  
  The CouchDB options are:
  
  * :option:`host`: The database server hostname or IP address.
  * :option:`port`: The port that CouchDB listens on.
  * :option:`db`: The name of the database (e.g. "cas_tickets").
  * :option:`user`: The username to connect to the database as.
  * :option:`passwd`: The password to use when connecting to the database.
  * :option:`https`: 1 (True) or 0 (False).  When connecting to the database,
    use HTTPS.
  * :option:`verify_cert`: 1 (True) or 0 (False).  When connecting to the 
    database, verify its X509 cert.  It is useful to set this option to False
    during development if using a self-signed cert.
  * :option:`ca_cert`: The path to a CA certificate file in PEM format.  The
    file may contain multiple concatenated certificates.  Thee certificates
    will automatically be trusted by the HTTP client used to contact the
    CouchDB database server.  This option is particularly useful if your
    CouchDB instance uses a certificate signed by an internal (i.e. non-public)
    certificate authority.


Options Common to All Ticket Stores
-----------------------------------
All ticket stores must support specific options:

* :option:`lt_lifespan`: The time in seconds before a Login Ticket expires.
* :option:`st_lifespan`: The time in seconds before a Service Ticket expires.
* :option:`pt_lifespan`: The time in seconds before a Proxy Ticket expires.
* :option:`pgt_lifespan`: The time in seconds before a Proxy Granting Ticket 
  expires.
* :option:`tgt_lifespan`: The time in seconds before a Ticket Granting Ticket 
  expires.
* :option:`ticket_size`: The size of a ticket (in characters) generated by the 
  ticket store.

.. note::

    Ticket lifespan countdowns for multi-use tickets (:term:`PGT` s and 
    :term:`TGT` s) may be reset if a ticket is used.  Some tickets have their
    lifespans connected to their parent tickets as per the CAS protocol and 
    should **not** outlive their parent tickets.

Interaction With Service Managers
---------------------------------

If a service manager is enabled in the txcas service, the ticket store will use
it to determine if the CAS server will authenticate for a particular service.


.. _CouchDB: http://couchdb.apache.org/
.. _CouchDB Lounge: http://tilgovi.github.io/couchdb-lounge/
.. _Big Couch: http://bigcouch.cloudant.com/
.. _Twisted asynchronous I/O model: http://krondo.com/?p=1209



